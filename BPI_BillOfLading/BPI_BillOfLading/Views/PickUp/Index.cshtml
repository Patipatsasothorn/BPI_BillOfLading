@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
                                            <style>
                                                /* .bootstrap-select .dropdown-toggle .filter-option {
                                                                                            padding: 8px 12px;
                                                                                        } */

                                                .bootstrap-select .dropdown-toggle {
                                                    border: 1px solid #ccc !important;
                                                    border-radius: 4px !important;
                                                }

                                                /* .bootstrap-select .dropdown-menu {
                                                                    border: 1px solid #ccc !important;
                                                                    border-radius: 4px !important;
                                                                    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1) !important;
                                                                    width: 100% !important;
                                                                    max-width: 100% !important;
                                                                } */

                                                .bootstrap-select.show .dropdown-toggle {
                                                    border-color: #66afe9 !important;
                                                }

                                                .form-control[readonly] {
                                                    background-color: #e9ecef; /* Light gray background */
                                                    cursor: not-allowed; /* Shows a not-allowed cursor */
                                                }

                                                .modal.bottom .modal-dialog {
                                                    position: fixed;
                                                    bottom: 0;
                                                    margin: 0;
                                                    width: 100%;
                                                    max-width: none; /* ให้ modal กว้างเต็มจอ */
                                                }

                                            </style>
}


<div class="container-fluid mb-4" style="font-family: Kanit;">
    <div class="card">
        <div class="card-header d-flex justify-content-between">
            <button id="NewBtn" class="btn btn-success mx-1">
                <i class="fa-solid fa-file"></i> เริ่มรายใหม่
            </button>
            <button id="copyBtn" class="btn btn-warning mx-1" disabled="true">
                <i class="fa-solid fa-copy"></i> คัดลอก
            </button>
            <button id="sendForApprovalBtn" class="btn btn-primary mx-1" disabled="true">
                <i class="fa-solid fa-paper-plane"></i> ส่งอนุมัติ
            </button>
            <button id="printBtn" class="btn btn-success mx-1 ms-auto" disabled="true">
                <i class="fa-solid fa-print"></i> พิมพ์รายงาน
            </button>
        </div>
        <div class="card-body" style="font-size: 15px;">
            <form id="form">
                <input type="text" class="form-control" id="username" value="@ViewBag.Username" hidden/>
                <input type="text" class="form-control" id="company" value="@ViewBag.Company" hidden/>
@*                 <input type="text" class="form-control" id="bypass" /> *@
                <div class="row mb-3">
                    <label class="col-sm-1 col-form-label">เลขที่เอกสาร</label>
                    <div class="col-sm-3">
                        <div class="input-group">
                            <input id="documentNumber" type="text" class="form-control" placeholder="ค้นหาเลขเอกสาร" autocomplete="off">
                            <span class="input-group-text">
                                <i class="fa-solid fa-qrcode"></i>
                            </span>
                        </div>
                    </div>

                    <label class="col-sm-1 col-form-label">วันที่</label>
                    <div class="col-sm-3">
                        <div class="input-group">
                            <input id="date" type="text" class="form-control">
                            <span class="input-group-text" id="datepickerIcon" style="cursor: pointer;">
                                <i class="fa-solid fa-calendar-day"></i>
                            </span>
                        </div>
                    </div>

                    <label class="col-sm-1 col-form-label">Plant</label>
                    <div class="col-sm-3">
                        <select id="plant" class="form-control selectpicker" data-live-search="true">
                            <option disabled selected>--- เลือกประเภทรถ ---</option>
                        </select>
                    </div>
                </div>

                <div class="row mb-3">
                    <label class="col-sm-1 col-form-label">เหตุผล</label>
                    <div class="col-sm-3">
                        <select id="reason" class="form-control selectpicker" data-live-search="true">
                            <option disabled selected>--- เลือกประเภทรถ ---</option>
                        </select>
                    </div>

                    <label class="col-sm-1 col-form-label">หน่วยงาน</label>
                    <div class="col-sm-2">
                        <select id="dep" class="form-control selectpicker" data-live-search="true">
                            <option disabled selected>--- เลือกประเภทรถ ---</option>
                        </select>
                    </div>

                    <label class="col-sm-2 col-form-label">วันที่ต้องการสินค้า (store จ่ายของ)</label>
                    <div class="col-sm-3">
                        <div class="input-group">
                            <input id="requiredDate" type="text" class="form-control">
                            <span class="input-group-text" id="datepickerIcon2" style="cursor: pointer;">
                                <i class="fa-solid fa-calendar-day"></i>
                            </span>
                        </div>
                    </div>
                </div>

                <div class="row mb-3">
                    <label class="col-sm-12 col-md-1 col-form-label">หมายเหตุ</label>
                    <div class="col-sm-3">
                        <div class="input-group">
                            <input id="remarks" type="text" class="form-control" placeholder="กรอกหมายเหตุเบิกของ" autocomplete="off">
                        </div>
                    </div>

                    <label class="col-sm-1 col-form-label">สถานะ</label>
                    <div class="col-sm-3">
                        <div class="input-group">
                            <input id="status" type="text" class="form-control" readonly>
                        </div>
                    </div>
                </div>

            </form>
        </div>
    </div>

    <div class="container-fluid mt-4">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <div>
                <button id="AddBtn" class="btn btn-success">
                    <i class="fa-solid fa-plus"></i>
                </button>
                <button id="searchPartBtn" class="btn btn-primary" disabled="true">
                    <i class="fa-solid fa-magnifying-glass"></i> ค้นหา Part
                </button>
            </div>
        </div>
        <table id="table" data-toggle="table" class="table table-bordered" style="font-size: 14px;">
            <thead class="table-info text-center">
                <tr>
                    <th data-field="partnum">รหัสสินค้า</th>
                    <th data-field="description">รายละเอียด</th>
                    <th data-field="quantity">จำนวน</th>
                    <th data-field="unit">หน่วย</th>
                   @* <th data-field="warehouse">คลัง</th> *@
                    @* <th data-field="bin">Bin</th> *@
                    <th data-field="action">Action</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>

        <div class="d-flex justify-content-end mt-3">
            <button id="SaveBtn" class="btn btn-warning mx-2" style="display: none;">
                <i class="fa-solid fa-save"></i> บันทึกข้อมูล
            </button>
            <button id="cancelBtn" class="btn btn-danger" style="display: none;" disabled="true">
                <i class="fa-solid fa-times"></i> ยกเลิกใบเบิก
            </button>
        </div>
    </div>

    <div class="modal fade" id="searchPartModal" tabindex="-1" role="dialog" aria-labelledby="searchPartLabel" aria-hidden="true">
        <div class="modal-dialog modal-xl" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="searchPartLabel">ค้นหา Part Number</h5>
                </div>
                <div class="modal-body">
                    <div class="row mb-3">
                        <label class="col-sm-3 col-form-label">Part Num</label>
                        <div class="col-sm-6">
                            <div class="input-group">
                                <input id="partNumModal" type="text" class="form-control" placeholder="กรอกรหัสสินค้า">
                            </div>
                        </div>
                    </div>
                    <div class="row mb-4">
                        <label class="col-sm-3 col-form-label">Part Descriptions</label>
                        <div class="col-sm-8">
                            <div class="input-group">
                                <input id="partDescModal" type="text" class="form-control" placeholder="กรอกรายละเอียดสินค้า">
                            </div>
                        </div>
                    </div>

                    <h5 class="mb-3">รายละเอียด</h5>
                    <table id="partResults" class="table table-bordered table-hover">
                        <thead class="table-info text-center">
                            <tr>
                                <th data-field="state" data-checkbox="true"></th>
                                <th data-field="partnum">รหัสสินค้า</th>
                                <th data-field="description">รายละเอียด</th>
                            </tr>
                        </thead>
                        <tbody id="partSearchResults">

                        </tbody>
                    </table>
                </div>
                <div class="modal-footer">
                    <button id="selectPartBtn" type="button" class="btn btn-warning">เลือก</button>
                    <button id="close" type="button" class="btn btn-danger" data-dismiss="modal">ยกเลิก</button>
                </div>
            </div>
        </div>
    </div>

@*     <!-- ปุ่มเรียก modal -->
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#bottomModal">
        เปิด Modal ด้านล่าง
    </button> *@

    <!-- Modal -->
    <div class="modal fade bottom" id="bottomModal" tabindex="-1" aria-labelledby="bottomModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body" style="background-color: #99FFCC;">
                    
                </div>
            </div>
        </div>
    </div>

</div>

<script>
    $(document).ready(function () {

        $('.selectpicker').selectpicker();
        $('#table').bootstrapTable();
        $('#searchPartBtn').prop('disabled', true);

        $('#date, #requiredDate').datepicker({
            format: 'dd/mm/yyyy',
            todayBtn: 'linked',
            autoclose: true,
            todayHighlight: true,
            startDate: new Date(),
        }).datepicker('setDate', new Date());

        $('#datepickerIcon').on('click', function () {
            $('#date').datepicker('show');
        });

        $('#datepickerIcon2').on('click', function () {
            $('#requiredDate').datepicker('show');
        });

        function showLoadingOverlay() {
            $.LoadingOverlay("show", {
                image: "",
                fontawesome: "fa-solid fa-spinner fa-spin",
            });
        }

        function hideLoadingOverlay() {
            $.LoadingOverlay("hide");
        }

        function loadFormData() {
            var username = $('#username').val();
            var company = $('#company').val();
            showLoadingOverlay();

            $.ajax({
                url: '/PickUp/GetFormData',
                method: 'GET',
                data: { username: username, company: company },
                success: function (response) {
                    if (response.success) {
                        var result = response;

                        populateSelectOptions('#plant', result.plant);
                        populateSelectOptions('#reason', result.reason);
                        populateSelectOptions('#dep', result.dep);

                        hideLoadingOverlay();
                    }
                },
                error: function () {
                    hideLoadingOverlay();
                    Swal.fire({
                        icon: 'error',
                        title: 'เกิดข้อผิดพลาด',
                        text: 'ไม่สามารถโหลดข้อมูลได้ กรุณาลองใหม่อีกครั้ง',
                    });
                }
            });
        }

        function populateSelectOptions(selector, options) {
            var $select = $(selector);
            $select.empty();
            $select.append('<option disabled selected>--- เลือกข้อมูล ---</option>');
            $select.selectpicker('destroy');

            $.each(options, function (index, option) {
                $select.append($('<option>', {
                    value: option.value,
                    text: option.text
                }));
            });

            $select.selectpicker();
        }

        loadFormData();

        $('#AddBtn').on('click', function (e) {
            var isValid = true;

            $('#table tbody tr .validation-message').remove();
            $('#table tbody tr .form-control').removeClass('is-invalid');

            $('#table tbody tr').each(function () {
                var $row = $(this);
                var partNum = $row.find('.partNum').val();
                var quantity = $row.find('.quantity').val();
                var unit = $row.find('.unit').val();
                //var warehouse = $row.find('.warehouse').val();
                //var bin = $row.find('.bin').val();

                if (partNum === '' || quantity === '' || parseInt(quantity, 10) <= 0 || unit === null /* || warehouse === null || bin === null */) {
                    isValid = false;

                    if (partNum === '') {
                        $row.find('.partNum').addClass('is-invalid');
                        $row.find('.partNum').after('<span class="validation-message text-danger">กรุณากรอกรหัสสินค้า</span>');
                    }
                    if (quantity === '' || parseInt(quantity, 10) <= 0) {
                        $row.find('.quantity').addClass('is-invalid');
                        $row.find('.quantity').after('<span class="validation-message text-danger">กรุณากรอกจำนวนหรือจำนวนเป็น 0</span>');
                    }
                    if (unit === null) {
                        $row.find('.unit').addClass('is-invalid');
                        $row.find('.unit').after('<span class="validation-message text-danger">กรุณาเลือกหน่วย</span>');
                    }
                    // if (warehouse === null) {
                    //     $row.find('.warehouse').addClass('is-invalid');
                    //     $row.find('.warehouse').after('<span class="validation-message text-danger">กรุณาเลือกคลังสินค้า</span>');
                    // }
                    // if (bin === null) {
                    //     $row.find('.bin').addClass('is-invalid');
                    //     $row.find('.bin').after('<span class="validation-message text-danger">กรุณาเลือก Bin</span>');
                    // }
                }
            });

            if (isValid) {
                $('#searchPartBtn').prop('disabled', false);
                $('#SaveBtn').show();

                var checkRow = $('#table tbody').find('tr td').text().trim();

                if (checkRow === 'No matching records found') {
                    $('#table tbody').empty();
                }

                $('#table tbody tr').removeClass('editing');

                $('#table tbody').append(`
                    <tr>
                        <td><input type="text" class="form-control partNum" placeholder="รหัสสินค้า"></td>
                        <td><input type="text" class="form-control desc" placeholder="รายละเอียดสินค้า"></td>
                        <td><input type="number" class="form-control quantity" placeholder="จำนวน"></td>
                       <td>
                            <input type="hidden" class="form-control unit" value="">
                            <input type="text" class="form-control unitDesc" placeholder="หน่วย" readonly>
                        </td>
                        <td class="text-center">
                            <button class="btn btn-danger btn-sm delete-row">
                                <i class="fa-solid fa-trash"></i>
                            </button>
                        </td>
                    </tr>
                `);

                $('#table tbody tr').last().addClass('editing');

                $('#SaveBtn').show();
                $('#cancelBtn').show();
                $('#SaveBtn').prop('disabled', false);

                                        // <td>
                        //     <select class="form-control unit">
                        //         <option disabled selected>เลือกหน่วย</option>
                        //     </select>
                        // </td>
            }
        });
        // <td>
        //                     <select class="form-control warehouse">
        //                         <option disabled selected>เลือกคลังสินค้า</option>
        //                     </select>
        //                 </td>
        //                 <td>
        //                     <select class="form-control bin">
        //                         <option disabled selected>เลือกบินสินค้า</option>
        //                     </select>
        //                 </td>

        $('#close').on('click', function () {
            $('#searchPartModal').modal('hide');
        });

        $('#searchPartModal').on('hidden.bs.modal', function () {

            $('#partNumModal').val('');
            $('#partDescModal').val('');

            $('#partResults').bootstrapTable('removeAll');
        });

        $('#searchPartBtn').on('click', function () {
            $('#searchPartModal').modal('show');

            $('#partNumModal').on('input', function () {
                var query = $(this).val();
                var company = $('#company').val();

                if (query.length >= 3) {
                    $.ajax({
                        url: '/PickUp/SearchPartModal',
                        method: 'GET',
                        data: { query: query, company: company },
                        success: function (response) {
                            if (response.success) {
                                $('#partResults').bootstrapTable('load', response.data);
                            }
                        },
                        error: function () {
                            Swal.fire({
                                icon: 'error',
                                title: 'เกิดข้อผิดพลาด',
                                text: 'ไม่สามารถเชื่อมต่อกับเซิร์ฟเวอร์ได้',
                            });
                        }
                    });
                } else {
                    $('#partResults').bootstrapTable('removeAll');
                }
            });

            $('#partDescModal').on('input', function () {
                var query = $(this).val();
                var company = $('#company').val();
                if (query.length >= 3) {
                    $.ajax({
                        url: '/PickUp/SearchPartModal',
                        method: 'GET',
                        data: { query: query, company: company },
                        success: function (response) {
                            if (response.success) {
                                $('#partResults').bootstrapTable('load', response.data);
                            } else {
                                $('#partResults').bootstrapTable('load', [{
                                    partNum: '',
                                    description: 'ไม่พบข้อมูล'
                                }]);
                            }
                        },
                        error: function () {
                            Swal.fire({
                                icon: 'error',
                                title: 'เกิดข้อผิดพลาด',
                                text: 'ไม่สามารถเชื่อมต่อกับเซิร์ฟเวอร์ได้',
                            });
                        }
                    });
                } else {
                    $('#partResults').bootstrapTable('removeAll');
                }
            });

        });

        $('#selectPartBtn').on('click', function () {
            var selectedRows = $('#partResults').bootstrapTable('getSelections');
            var selectedPartNums = selectedRows.map(row => row.partNum);

            var $currentRow = $('#table tbody tr.editing');

            if ($currentRow.length) {
                $currentRow.find('.partNum').val(selectedPartNums.join(', '));
                $currentRow.find('.partNum').trigger($.Event('keypress', { which: 13 }));
            } else {
                Swal.fire({
                    icon: 'warning',
                    title: 'ไม่มีแถวที่กำลังแก้ไข',
                    text: 'กรุณาเลือกแถวที่ต้องการแก้ไขก่อน',
                });
            }
            $('#searchPartModal').modal('hide');
        });

        $('#table').on('click', '.delete-row', function () {
            $(this).closest('tr').remove();
            $("#SaveBtn").show();
            $('#searchPartBtn').prop('disabled', true);
        });

        $('#table').on('keypress', '.partNum', function (e) {
            if (e.which === 13) {
                e.preventDefault();

                var $row = $(this).closest('tr');
                var $partNumInput = $(this);

                //$partNumInput.prop('disabled', true);

                var partNum = $partNumInput.val();
                var company = $('#company').val();

                $.ajax({
                    url: '/PickUp/GetPartNum',
                    method: 'GET',
                    data: { partNum: partNum, company: company },
                    success: function (response) {
                        if (response.success) {
                            var part = response.searchPart[0];

                            $partNumInput.val(part.partNum);
                            $row.find('.desc').val(part.partDescription);
                            $row.find('.unit').val(part.uomCode);
                            $row.find('.unitDesc').val(part.uomDesc);

                            // updateDropdown($row, response, company, function () {
                            //     setTimeout(function () {
                            //         //$partNumInput.prop('disabled', false);
                            //     }, 100);
                            // });

                            $row.find('.quantity').focus();

                        } else {
                            showError('ไม่พบข้อมูล', 'ไม่พบรหัสสินค้านี้ในระบบ กรุณากรอกใหม่');
                            //$partNumInput.val('');
                            resetInput($partNumInput);
                            //$partNumInput.prop('disabled', false);
                        }
                    },
                    error: function () {
                        showError('เกิดข้อผิดพลาด', 'ไม่สามารถเชื่อมต่อกับเซิร์ฟเวอร์ได้');
                        $partNumInput.prop('disabled', false);
                    }
                });
            }
        })

        let debounceTimer; // ตัวแปรสำหรับจัดการ debounce

        $('#table').on('input', '.quantity', function () {
            var $row = $(this).closest('tr');

            // ดึงค่าจาก row ปัจจุบัน
            var partNum = $row.find('.partNum').val();
            var quantity = parseFloat($(this).val()) || 0; // รับค่า input จาก quantity
            //var warehouse = $row.find('.warehouse').val();
            //var bin = $row.find('.bin').val();
            var company = $('#company').val();

            // // ล้าง timer เดิมถ้ามี เพื่อป้องกันการเรียกฟังก์ชันซ้ำ
            // clearTimeout(debounceTimer);

            // // ตั้งเวลาให้ฟังก์ชันทำงานหลังจากหน่วงเวลา
            // debounceTimer = setTimeout(function () {
                
            // }, 500); // หน่วงเวลา 500 มิลลิวินาที (ปรับตามความเหมาะสม)
        });

        // function updateDropdown($row, response, company, callback) {
        //     //var $warehouseDropdown = $row.find('.warehouse');
        //     var $unitDropdown = $row.find('.unit');
        //     //var $binDropdown = $row.find('.bin');

        //    // $warehouseDropdown.empty();
        //     $unitDropdown.empty();
        //     //$binDropdown.empty();

        //    /* $.each(response.searchWh, function (index, item) {
        //         $warehouseDropdown.append($('<option>', {
        //             value: item.warehouseCode,
        //             text: item.warehouseCode + " : " + item.description
        //         }));
        //     });     */

        //     /*if ($warehouseDropdown.find('option').length > 0) {
        //         var defaultWarehouse = $warehouseDropdown.find('option').first().val();
        //         $warehouseDropdown.val(defaultWarehouse);

        //         loadBin($row, defaultWarehouse, company, callback);
        //     } else {
        //         if (callback) callback();
        //     }   */

        //     $.each(response.searchUOM, function (index, item) {
        //         $unitDropdown.append($('<option>', {
        //             value: item.uomcode,
        //             text: item.uomdesc
        //         }));
        //     });

        //     /*$warehouseDropdown.off('input').on('input', function () {
        //         var selectedWarehouse = $(this).val();
        //         loadBin($row, selectedWarehouse, company);
        //     });*/
        // }

        /*function loadBin($row, warehouse, company, defaultBin, callback) {
            var $binDropdown = $row.find('.bin');
            $binDropdown.empty();

            $.ajax({
                url: '/PickUp/GetBin',
                method: 'GET',
                data: { selectedWarehouse: warehouse, company: company },
                success: function (response) {
                    if (response.success) {
                        $.each(response.searchBin, function (index, item) {
                            $binDropdown.append($('<option>', {
                                value: item.binNum,
                                text: item.binNum + " : " + item.description,
                                selected: item.binNum === defaultBin
                            }));
                        });
                    }
                    if (callback) callback();
                },
                error: function () {
                    showError('เกิดข้อผิดพลาด', 'ไม่สามารถเชื่อมต่อกับเซิร์ฟเวอร์ได้');
                    if (callback) callback();
                }
            });
        }  */

        function showError(title, message) {
            Swal.fire({
                icon: 'warning',
                title: title,
                text: message
            });
        }

        function resetInput($input) {
            if ($input.val() === '') {
                $input.focus();
            }
        }

        $('#NewBtn').on('click', function (e) {
            e.preventDefault();

            $('form').trigger('reset');

            $('#plant').selectpicker('destroy');
            $('#reason').selectpicker('destroy');
            $('#dep').selectpicker('destroy');

            $('#table').bootstrapTable('destroy');
            $('#table tbody').empty();

            $('#SaveBtn').hide();
            $('#cancelBtn').prop('disabled', true);
            $('#cancelBtn').hide();
            $('#AddBtn').prop('disabled', false);

             $('#date, #requiredDate').datepicker('setDate', new Date());
        });

        $('#SaveBtn').on('click', function () {
            showLoadingOverlay();

            if (!validateFormAndTable()) { 
                hideLoadingOverlay();
                return false;
            }

            var formData = {
                company: $('#company').val(),
                documentNumber: $('#documentNumber').val(),
                date: $('#date').val(),
                plant: $('#plant').val(),
                reason: $('#reason').val(),
                department: $('#dep').val(),
                requiredDate: $('#requiredDate').val(),
                remarks: $('#remarks').val(),
                username: $('#username').val(),
                status: $('#status').val(),
                //bypass: $('#bypass').val(),
                parts: []
            };

            $('#table tbody tr').each(function () {
                var $row = $(this);
                var partNum = $row.find('.partNum').val();
                var description = $row.find('.desc').val();
                var quantity = $row.find('.quantity').val();
                var unit = $row.find('.unit').val();
                //var warehouse = $row.find('.warehouse').val();
                //var bin = $row.find('.bin').val();

                formData.parts.push({
                    partNum: partNum,
                    description: description,
                    quantity: quantity,
                    unit: unit,
                    //warehouse: warehouse,
                    //bin: bin
                });
            });

            $.ajax({
                url: '/PickUp/SaveDocument',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(formData),
                success: function (response) {
                    if (response.success) {
                        hideLoadingOverlay();
                        Swal.fire({
                            icon: 'success',
                            title: 'สำเร็จ',
                            text: 'บันทึกเรียบร้อยแล้ว',
                        });

                        $('#documentNumber').val(response.data).trigger(jQuery.Event('keypress', { which: 13 }));

                        $('#status').val('บันทึก');
                        $('#sendForApprovalBtn').show();
                        $('#cancelBtn').show();
                        $('#searchPartBtn').prop('disabled', true);

                    } else {
                        hideLoadingOverlay();
                        Swal.fire({
                            icon: 'error',
                            title: 'ผิดพลาด',
                            text: 'ไม่สามารถบันทึกข้อมูลได้',
                        });
                    }
                },
                error: function () {
                    hideLoadingOverlay();
                    Swal.fire({
                        icon: 'error',
                        title: 'เกิดข้อผิดพลาด',
                        text: response.error,
                    });
                }
            });
        });

        $('#documentNumber').on('keypress', function (e) {
            if (e.which === 13) {
                e.preventDefault();

                var documentNumber = $(this).val();
                var company = $('#company').val();

                $.ajax({
                    url: '/PickUp/GetDocumentData',
                    method: 'GET',
                    data: { documentNumber: documentNumber, company: company },
                    success: function (response) {
                        if (response.success) {
                            var data = response.getData[0];
                            var parts = response.dataWithDescriptions;

                            function convertDateFormat(dateStr) {
                                var parts = dateStr.split('/');
                                return `${parts[0]}/${parts[1]}/${parts[2]}`;
                            }

                            var formattedDocDate = convertDateFormat(data.docDate);
                            var formattedReqDate = convertDateFormat(data.reqDate);

                            $('#date').val(formattedDocDate);
                            $('#plant').val(data.plant).selectpicker('destroy');
                            $('#reason').val(data.reason).selectpicker('destroy');
                            $('#dep').val(data.dep).selectpicker('destroy');
                            $('#requiredDate').val(formattedReqDate);
                            $('#remarks').val(data.remark);
                            $('#status').val(data.status);

                            switch (data.status) {
                                case 'S':
                                    $('#status').val('บันทึก');
                                    $('#sendForApprovalBtn').prop('disabled', false);
                                    $('#cancelBtn').show();
                                    $('#cancelBtn').prop('disabled', false);
                                    $('#printBtn').prop('disabled', false);
                                    $('#AddBtn').prop('disabled', false);
                                    $('#SaveBtn').show();

                                    $('#table tbody tr').each(function () {
                                        // ปลดล็อกฟิลด์ในแต่ละแถว
                                        $(this).find('.partNum, .desc, .quantity, .unit').prop('readonly', false);
                                        //$(this).find('.warehouse, .bin').prop('disabled', false);
                                        $(this).find('.delete-row').prop('disabled', false);

                                        // // ดึงค่าจากแต่ละแถว
                                        // var partNum = $(this).find('.partNum').val();
                                        // var quantity = $(this).find('.quantity').val();
                                        // var warehouse = $(this).find('.warehouse').val();
                                        // var bin = $(this).find('.bin').val();

                                        // // // ล้าง timer เดิมถ้ามี เพื่อป้องกันการเรียกฟังก์ชันซ้ำ
                                        // clearTimeout(debounceTimer);

                                        // // ตั้งเวลาให้ฟังก์ชันทำงานหลังจากหน่วงเวลา
                                        // debounceTimer = setTimeout(function () {
                                        //    checkCostForAppr(partNum, company, quantity, warehouse, bin);
                                        // }, 500); // หน่วงเวลา 500 มิลลิวินาที (ปรับตามความเหมาะสม)

                                        // เรียกใช้ฟังก์ชัน checkCostForAppr พร้อมพารามิเตอร์
                                    });

                                    break;

                                case 'W':
                                    $('#status').val('รออนุมัติ');
                                    $('#AddBtn').prop('disabled', true);
                                    $('#copyBtn').prop('disabled', false);
                                    $('#cancelBtn').hide();
                                    $('#sendForApprovalBtn').prop('disabled', true);
                                    $('#printBtn').prop('disabled', false);
                                    $('#SaveBtn').hide();
                                    break;

                                case 'A':
                                    $('#status').val('อนุมัติแล้ว');
                                    $('#AddBtn').prop('disabled', true);
                                    $('#copyBtn').prop('disabled', false);
                                    $('#sendForApprovalBtn').prop('disabled', true);
                                    $('#printBtn').prop('disabled', false);
                                    $('#cancelBtn').hide();
                                    $('#SaveBtn').hide();
                                    break;

                                case 'C':
                                    $('#status').val('ยกเลิก');
                                    $('#AddBtn').prop('disabled', true);
                                    $('#printBtn').prop('disabled', true);
                                    $('#copyBtn').prop('disabled', true);
                                    $('#SaveBtn').hide();
                                    $('#cancelBtn').hide();
                                    break;

                                case 'U':
                                    $('#status').val('ไม่อนุมัติ');
                                    $('#sendForApprovalBtn').prop('disabled', true);
                                    $('#printBtn').prop('disabled', true);
                                    $('#AddBtn').prop('disabled', true);
                                    $('#SaveBtn').hide();
                                    $('#cancelBtn').hide();
                                    $('#copyBtn').prop('disabled', false);
                                    break;

                                case 'E':
                                    $('#status').val('แก้ไข');
                                    $('#sendForApprovalBtn').prop('disabled', true);
                                    $('#cancelBtn').show();
                                    $('#cancelBtn').prop('disabled', false);
                                    $('#printBtn').prop('disabled', true);
                                    $('#copyBtn').prop('disabled', false);
                                    $('#AddBtn').prop('disabled', false);

                                    $('#table tbody tr').each(function () {
                                        $(this).find('.partNum, .desc, .quantity, .unit').prop('readonly', false);
                                        //$(this).find('.warehouse, .bin').prop('disabled', false);
                                        $(this).find('.delete-row').prop('disabled', false);
                                    });

                                    $('#SaveBtn').show();
                                    break;

                                case 'P':
                                    $('#status').val('มีการจ่ายของแล้ว บางส่วนหรือทั้งหมด');
                                    $('#copyBtn').prop('disabled', false);
                                    $('#printBtn').prop('disabled', false);
                                    $('#AddBtn').prop('disabled', true);
                                    $('#SaveBtn').hide();
                                    $('#cancelBtn').hide();
                                    break;

                                default:
                                    console.log("Unknown status.");
                            }
                            $('#table tbody').empty();

                            if (parts) {
                                $.each(parts, function (index, part) {
                                    var uomOptions = part.uoms.map(function (uom) {
                                        return `<option value="${uom.uomcode}" ${uom.uomcode === part.unit ? 'selected' : ''}>${uom.uomdesc}</option>`;
                                    }).join('');

                                    //var orderedWarehouses = [part.wareHouse, part.description ...part.warehouses.filter(warehouse => warehouse !== part.wareHouse)];

                                    /*var orderedWarehouses = [
                                        { warehouse: part.wareHouse, description: part.description }, // คลังที่เลือกไว้
                                        ...part.warehouses
                                            .filter(warehouse => warehouse.warehouseCode !== part.wareHouse) // กรองคลังที่ซ้ำออก
                                            .map(warehouse => ({
                                                warehouse: warehouse.warehouseCode,
                                                description: warehouse.description
                                            }))
                                    ];

                                    var warehouseOptions = orderedWarehouses.map(function (item) {
                                        return `<option value="${item.warehouse}" ${item.warehouse === part.wareHouse ? 'selected' : ''}>
                                            ${item.warehouse} : ${item.description}
                                        </option>`;
                                    }).join('');   */

                                    $('#table tbody').append(`
                                        <tr>
                                            <td><input type="text" class="form-control partNum" value="${part.partNum}" readonly></td>
                                            <td><input type="text" class="form-control desc" value="${part.description}" readonly></td>
                                            <td><input type="number" class="form-control quantity" value="${part.qty}" readonly></td>
                                            <td>
                                                <div class="input-group">
                                                    <input type="text" class="form-control unit" value="${part.unit}" hidden>
                                                    <input type="text" class="form-control unitDesc" value="${part.uoms.find(u => u.uomcode === part.unit)?.uomdesc || ''}" readonly>
                                                </div>
                                            </td>
                                            
                                            <td class="text-center">
                                                <button class="btn btn-danger btn-sm delete-row" disabled>
                                                    <i class="fa-solid fa-trash"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    `);

                                    // <td>
                                    //                     <select class="form-control warehouse" disabled>
                                    //                 ${warehouseOptions}
                                    //             </select>
                                    //         </td>
                                    //         <td>
                                    //                     <select class="form-control bin" disabled></select>
                                    //         </td>

                                    // var $newRow = $('#table tbody tr').last();
                                    // var $warehouseDropdown = $newRow.find('.warehouse');

                                    // if ($warehouseDropdown.find('option').length > 0) {
                                    //     var defaultWarehouse = $warehouseDropdown.find('option').first().val();
                                    //     $warehouseDropdown.val(defaultWarehouse);

                                    //     var defaultBin = part.bin;
                                    //     loadBin($newRow, defaultWarehouse, company, defaultBin);
                                    // } else {

                                    // }

                                    // $warehouseDropdown.off('input').on('input', function () {
                                    //     var selectedWarehouse = $(this).val();
                                    //     loadBin($newRow, selectedWarehouse, company);
                                    // });
                                });

                                if (data.status === 'S' || data.status === 'E') {
                                    $('#table tbody tr').each(function (index) {
                                        $(this).find('.partNum, .desc, .quantity').prop('readonly', false);
                                        $(this).find('.unit').prop('disabled', false);
                                        $(this).find('.delete-row').prop('disabled', false);
                                    });
                                }

                                $('.selectpicker').selectpicker('refresh');
                            }

                        } else {
                            Swal.fire({
                                icon: 'warning',
                                title: 'ไม่พบข้อมูล',
                                text: 'ไม่พบเอกสารนี้ในระบบ กรุณาตรวจสอบเลขที่เอกสาร',
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            icon: 'error',
                            title: 'เกิดข้อผิดพลาด',
                            text: 'ไม่สามารถเชื่อมต่อกับเซิร์ฟเวอร์ได้',
                        });
                    }
                });
            }
        });

        $('#copyBtn').on('click', function () {

            $('form').trigger('reset');

            $('#table input').prop('readonly', false);
            $('#table select').prop('disabled', false);

            $('#table .delete-row').prop('disabled', false);

            $('#SaveBtn').show();
            $('#SaveBtn').prop('disabled', false);

            $('#printBtn').prop('disabled', true);

            $('#cancelBtn').hide();

            $('#AddBtn').prop('disabled', false);

            $('#date, #requiredDate').datepicker('setDate', new Date());
        });

        $('#sendForApprovalBtn').on('click', function () {
            //var documentNumber = $('#documentNumber').val();
            //var username = $('#username').val();

            var formData = {
                company: $('#company').val(),
                documentNumber: $('#documentNumber').val(),
                date: $('#date').val(),
                plant: $('#plant').val(),
                reason: $('#reason').val(),
                department: $('#dep').val(),
                requiredDate: $('#requiredDate').val(),
                remarks: $('#remarks').val(),
                username: $('#username').val(),
                status: $('#status').val(),
                //bypass: $('#bypass').val(),
                parts: []
            };

            $('#table tbody tr').each(function () {
                var $row = $(this);
                var partNum = $row.find('.partNum').val();
                var description = $row.find('.desc').val();
                var quantity = $row.find('.quantity').val();
                var unit = $row.find('.unit').val();
                // var warehouse = $row.find('.warehouse').val();
                // var bin = $row.find('.bin').val();

                formData.parts.push({
                    partNum: partNum,
                    description: description,
                    quantity: quantity,
                    unit: unit,
                    // warehouse: warehouse,
                    // bin: bin
                });
            });

            $.ajax({
                url: '/PickUp/SendForApproval',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(formData),
                success: function (response) {
                    if (response.success) {
                        if (response.message) {
                            Swal.fire({
                                icon: 'success',
                                title: 'ส่งคำขออนุมัติสำเร็จ',
                                text: response.message,
                            });

                            $('#documentNumber').val(response.documentNumber).trigger(jQuery.Event('keypress', { which: 13 }));
                        }
                        else
                        {
                            Swal.fire({
                                icon: 'success',
                                title: 'ส่งคำขออนุมัติสำเร็จ',
                                text: 'เอกสารได้ถูกส่งไปยังผู้อนุมัติแล้ว',
                            });

                            $('#status').val('รออนุมัติ');
                            $('#documentNumber').val(response.documentNumber).trigger(jQuery.Event('keypress', { which: 13 }));
                        }
                    } else {
                        Swal.fire({
                            icon: 'warning',
                            title: 'ส่งคำขออนุมัติไม่สำเร็จ',
                            text: response.message,
                        });
                    }
                },
                error: function () {
                    Swal.fire({
                        icon: 'error',
                        title: 'เกิดข้อผิดพลาด',
                        text: 'ไม่สามารถเชื่อมต่อกับเซิร์ฟเวอร์ได้',
                    });
                }
            });
        });

        $('#cancelBtn').on('click', function () {
            var documentNumber = $('#documentNumber').val();
            var username = $('#username').val();

            Swal.fire({
                title: 'คุณแน่ใจหรือไม่?',
                text: 'คุณต้องการยกเลิกเอกสารนี้หรือไม่?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'ใช่, ยกเลิกเอกสาร!',
                cancelButtonText: 'ไม่, ยกเลิก',
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/PickUp/CancelDocument',
                        method: 'POST',
                        data: { documentNumber: documentNumber, username: username },
                        success: function (response) {
                            if (response.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'ยกเลิกเอกสารสำเร็จ',
                                    text: response.message,
                                });

                                $('#status').val('ยกเลิก');
                                $('#sendForApprovalBtn').prop('disabled', true);
                                $('#printBtn').prop('disabled', true);
                                $('#cancelBtn').prop('disabled', true);

                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'ไม่สามารถยกเลิกเอกสารได้',
                                    text: response.message,
                                });
                            }
                        },
                        error: function () {
                            Swal.fire({
                                icon: 'error',
                                title: 'เกิดข้อผิดพลาด',
                                text: 'ไม่สามารถเชื่อมต่อกับเซิร์ฟเวอร์ได้',
                            });
                        }
                    });
                }
            });
        });

        $('#partResults').bootstrapTable({
            columns: [
                { field: 'state', checkbox: true },
                { field: 'partNum', title: 'รหัสสินค้า' },
                { field: 'partDescription', title: 'รายละเอียด' }
            ],
            pagination: true,
            search: false,
            sortable: true,
            formatPaginationSwitch: function () {
                return 'แสดง/ซ่อน ตาราง';
            },
            formatRecordsPerPage: function (pageNumber) {
                return `แถวต่อหน้า ${pageNumber}`;
            },
            formatShowingRows: function (pageFrom, pageTo, totalRows) {
                return `แสดง ${pageFrom} ถึง ${pageTo} ของ ${totalRows} รายการ`;
            },
            formatSearch: function () {
                return 'ค้นหา';
            },
            formatNoMatches: function () {
                return 'ไม่พบข้อมูลที่ตรงกับการค้นหาของคุณ';
            }
        });

        $('#printBtn').on('click', function () {
            showLoadingOverlay();
            var docId = $('#documentNumber').val();

            $.ajax({
                url: '/PickUp/GeneratePreview',
                type: 'GET',
                data: { docId: docId },
                xhrFields: {
                    responseType: 'blob'
                },
                success: function (blob) {
                    hideLoadingOverlay();
                    var url = window.URL.createObjectURL(blob);
                    window.open(url);
                },
                error: function (xhr, status, error) {
                    hideLoadingOverlay();
                }
            });
        });

        function validateFormAndTable() {
            var isValid = true;

            $('#form .validation-message').remove();
            $('#form .form-control').removeClass('is-invalid');

            $('#form input, #form select').each(function () {
                var $field = $(this);

                if ($field.prop('required') || $field.is('select')) {
                    if ($field.val() === '' || $field.val() === null) {
                        isValid = false;

                        $field.addClass('is-invalid');
                        $field.after(`<span class="validation-message text-danger">กรุณากรอกข้อมูลให้ครบถ้วน</span>`);
                    }
                }
            });

            $('#table tbody tr').each(function () {
                var $row = $(this);
                var partNum = $row.find('.partNum').val();
                var quantity = $row.find('.quantity').val();
                var unit = $row.find('.unit').val();
                // var warehouse = $row.find('.warehouse').val();
                // var bin = $row.find('.bin').val();

                if (partNum === '' || quantity === '' || unit === null || /* warehouse === null || bin === null ||  */quantity <= 0) {
                    isValid = false;

                    if (partNum === '') {
                        $row.find('.partNum').addClass('is-invalid');
                        $row.find('.partNum').after('<span class="validation-message text-danger">กรุณากรอกรหัสสินค้า</span>');
                    }
                    if (quantity === '') {
                        $row.find('.quantity').addClass('is-invalid');
                        $row.find('.quantity').after('<span class="validation-message text-danger">กรุณากรอกจำนวน</span>');
                    } else if (quantity <= 0) {
                        $row.find('.quantity').addClass('is-invalid');
                        $row.find('.quantity').after('<span class="validation-message text-danger">จำนวนต้องมากกว่า 0</span>');
                    }
                    if (unit === null) {
                        $row.find('.unit').addClass('is-invalid');
                        $row.find('.unit').after('<span class="validation-message text-danger">กรุณาเลือกหน่วย</span>');
                    }
                    // if (warehouse === null) {
                    //     $row.find('.warehouse').addClass('is-invalid');
                    //     $row.find('.warehouse').after('<span class="validation-message text-danger">กรุณาเลือกคลังสินค้า</span>');
                    // }
                    // if (bin === null) {
                    //     $row.find('.bin').addClass('is-invalid');
                    //     $row.find('.bin').after('<span class="validation-message text-danger">กรุณาเลือก Bin</span>');
                    // }
                }
            });

            return isValid;
        }
    });
</script>